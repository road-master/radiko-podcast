[[source]]
url = "https://pypi.org/simple"
verify_ssl = true
name = "pypi"

[dev-packages]
autoflake = "*"
bandit = {version = "*", markers="python_version >= '3.7'"}
black = {version = "*", markers="python_version >= '3.7'"}
build = "*"
bump2version = "*"
cohesion = "*"
# Hotfix for Pipenv's Bug:
# - Pipenv should prioritize more cross-platform sys_platform condition between packages when lock
#   路 Issue #4101 路 pypa/pipenv
#   https://github.com/pypa/pipenv/issues/4101
colorama = "*"
# Since coverage 3.5.3 stops Pipenv locking:
# - Command: "pipenv install --skip-lock" fails
#   since it tries to parse legacy package metadata and raise InstallError
#   路 Issue #5595 路 pypa/pipenv
#   https://github.com/pypa/pipenv/issues/5595
coverage = ">=3.5.4"
dlint = "*"
docformatter = {extras = ["tomli"], version = "*"}
dodgy = "*"
factory-boy = "*"
# Since Pipenv can't lock for too much combinations to attempt lock:
# pip._vendor.resolvelib.resolvers.ResolutionTooDeep: 2000000
# The hacking depends flake8 ~=6.1.0 or ~=5.0.1 or ~=4.0.1.
flake8 = {version = "!=6.0.0,!=5.0.0,>=4.0.1", markers="python_version >= '3.6'"}
# To use flake8 --radon-show-closures
flake8-polyfill = "*"
# Latest hacking depends on legacy version of flake8, and legacy hacking doesn't narrow flake8 version.
# When unpin hacking, it has possibility to install too legacy version of hacking.
hacking = {version = ">=5.0.0", markers="python_version >= '3.8'"}
invokelint = {version = "*", markers="python_version >= '3.7'"}
isort = "*"
# To generate xml response from template for mocking radiko API
jinja2 = "*"
mypy = "*"
pydocstyle = {version = "*", markers="python_version >= '3.6'"}
pylint = "*"
# To test
pytest = "*"
pytest-asyncio = "*"
pytest-freezegun = "*"
pytest-mock = "*"
pytest-resource-path = "*"
pyvelocity = {version = "*", markers="python_version >= '3.9'"}
radikopodcast = {editable = true, path = "."}
radon = "*"
requests-mock = "*"
ruff = {version = "*", markers="python_version >= '3.7'"}
semgrep = {version = "*", markers="python_version >= '3.6'"}
tomli = {version = "*", markers="python_version >= '3.6'"}
types-freezegun = "*"
types-invoke = "*"
types-requests = "*"
types-setuptools = "*"
xenon = "*"

[packages]
# To implement commandline tool efficiently
click = "*"
# For Bandit warning:
# - blacklist_imports - Bandit documentation
#   https://bandit.readthedocs.io/en/1.7.4/blacklists/blacklist_imports.html#b405-import-xml-etree
defusedxml = "*"
# To validate XML from radiko API
errorcollector = "*"
# To control ffmpeg by Python
ffmpeg-python = "*"
# To intaract with radiko API to get media playlist
radikoplaylist = "*"
# To use YAML config file for list of programs to archive
yamldataclassconfig = "*"
# To manage radiko programs by database (now using SQLite)
sqlalchemy = "*"
# To generate table name by model class name
inflector = "*"
asynccpu = "*"
asyncffmpeg = "*"
